description: >
  Use Gradle command to integrate Thundra Foresight into your project and instrument your Gradle build. With this command, you can monitor your unit, integration, and end-to-end tests in your Gradle build with distributed tracing capabilities. Foresight is currently supporting JUnit and Selenium frameworks for Java runtime. However, making other frameworks such as TestNG available is in our roadmap.

  Python shell is required to successfully run this command at the moment.
usage:
  version: 2.1
  orbs:
    thundra: thundra-io/thundra-foresight@1.0.0
  jobs:
    gradle:
      docker:
        - image: cimg/openjdk:11.0
      steps:
        - checkout
        # Use `thundra/gradle` command
        - thundra/gradle:
            # Use environment variable name and set the secret on CircleCI
            apikey: THUNDRA_APIKEY
            project_id: THUNDRA_AGENT_TEST_PROJECT_ID
        - run:
            # Make sure to use the $THUNDRA_GRADLE_INIT_SCRIPT_PATH
            # Use `$([[ -f $THUNDRA_GRADLE_INIT_SCRIPT_PATH ]] && echo "--init-script $THUNDRA_GRADLE_INIT_SCRIPT_PATH")`
            # to check if the file exist first for fork builds.
            command: ./gradlew build --init-script $THUNDRA_GRADLE_INIT_SCRIPT_PATH
  workflows:
    example:
      jobs:
        - gradle
